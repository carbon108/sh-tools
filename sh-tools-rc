

curl_github(){

local repo_path=$1
local release_tag=$2
local download_dir=$3
local file_list_element=$4

[[ -z $file_list_element ]] &&\
    return 1

local repo_name=${repo_path##*/}

local release_trim=${release_tag#"${release_tag%%[0-9.-]*}"}
      release_trim=${release_trim:-$release_tag}
    # Reason: Untagged archives are just compressed repository sorces ${branch_name}.zip, i.e. usually letters-only
    #         Tagged arcvhives are releses on GitHub. They use trimmed release tags inside archive,
    #         non-digits seem to be removed from tag prefix
    # Replace idiom: https://unix.stackexchange.com/a/167766/203709

local release_page=https://github.com/${repo_path}/releases/tag/${release_tag}/
local archive_url=https://github.com/${repo_path}/archive/${release_tag}.zip
local zip_name=${repo_path//\//_}_${release_tag}
local zip_dir=/tmp/${zip_name}
local zip_file=${zip_dir}/${zip_name}.zip

! curl_exists "$release_page"  &&\
    { curl_exists "https://github.com/${repo_path}/" &&\
          { printf "\nRelease '$release_tag' does not exist in '$repo_path' repository\n" &&\
          return 1
          }

      printf "\nRepository '$repo_path' does not exist on GitHub or is private\n" &&\
      return 1
    }

mkdir -p $zip_dir
mkdir -p $download_dir
curl -Lk $archive_url --output ${zip_file}

unzip -o -q "${zip_file}" -d "${zip_dir}"

for f in "${@:4}"
do
  cp "${zip_dir}/$repo_name-$release_trim/$f" "$download_dir" && echo "$download_dir/${f##*/}"
done

}

curl_tini(){

local tini_path=${1:-/opt}

local release_tag=${TINI_VERSION:-'v0.18.0'}
local url=https://github.com/krallin/tini/releases/download/${release_tag}/tini
local tini_file=$tini_path/tini

! curl_exists "$url"  &&\
    printf "\ntini release '$tini_ver' not found\n" &&\
          return 1

mkdir -p $tini_path
curl -Lk $url --output $tini_file &&\
    chmod +x $tini_file &&\
    echo "$tini_file"

}